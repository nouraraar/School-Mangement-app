/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package App_Frames;

import App_Exceptions.InvalidPwdException;
import App_Exceptions.InvalidUsernameException;
import Dialogs.Message_Dialog;
import Models.User;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author amir,chedi,nour
 */
public class LoginFrame extends javax.swing.JFrame {

  
    
    /**
     * Creates new form LoginFrame
     */
    public LoginFrame(String userName , String server_ip) {
        initComponents();
        setValues(userName,server_ip);
        initVisibility();
      //  File img = new File("src/authentification_icon.png");
        //if(img.exists())
         this.setIconImage(new ImageIcon(getClass().getResource("/authentification_icon.png")).getImage());
        setVisible(true);
        setLocationRelativeTo(null);
       
    }

    private void setValues(String userName , String ip)
    {
     userNameTF.setText(userName);
     setIpV4(ip);
    }
    
    private void setIpV4(String ip)
    {
        String [] Bytes = new String[4];
        int i=0,index;
        while((index=ip.indexOf("."))!=-1)
        {
            Bytes[i] = ip.substring(0,index);
            ip = ip.substring(index+1);
            i++;
        }
        Bytes[i] = ip;
        
        ipByte1.setValue(Integer.parseInt(Bytes[0]));
        ipByte2.setValue(Integer.parseInt(Bytes[1]));
        ipByte3.setValue(Integer.parseInt(Bytes[2]));
        ipByte4.setValue(Integer.parseInt(Bytes[3]));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootPanel = new javax.swing.JPanel();
        userNameTF = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        usernameWarningLabel = new javax.swing.JLabel();
        pwdTF = new javax.swing.JPasswordField();
        jSeparator2 = new javax.swing.JSeparator();
        pwdWarningLabel = new javax.swing.JLabel();
        serverIpLabel = new javax.swing.JLabel();
        ipByte1 = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(127,0,255,1));
        jLabel4 = new javax.swing.JLabel();
        ipByte2 = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(0,0,255,1));
        jLabel5 = new javax.swing.JLabel();
        ipByte3 = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(0,0,255,1));
        jLabel6 = new javax.swing.JLabel();
        ipByte4 = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(1,0,255,1));
        frame_label = new javax.swing.JLabel();
        connectingLabel = new javax.swing.JLabel();
        connectBtn = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JLabel();
        pwdLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        username_icon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        minimizeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        rootPanel.setBackground(new java.awt.Color(33, 35, 35));
        rootPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 51, 255), null));
        rootPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                rootPanelMouseDragged(evt);
            }
        });
        rootPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rootPanelMousePressed(evt);
            }
        });

        userNameTF.setBackground(new java.awt.Color(33, 35, 35));
        userNameTF.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        userNameTF.setForeground(new java.awt.Color(255, 255, 255));
        userNameTF.setBorder(null);
        userNameTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userNameTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userNameTFFocusLost(evt);
            }
        });

        usernameWarningLabel.setForeground(new java.awt.Color(214, 69, 65));
        usernameWarningLabel.setText("* Enter your username");

        pwdTF.setBackground(new java.awt.Color(33, 35, 35));
        pwdTF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pwdTF.setForeground(new java.awt.Color(240, 240, 240));
        pwdTF.setBorder(null);
        pwdTF.setEchoChar('â€¢');
        pwdTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pwdTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pwdTFFocusLost(evt);
            }
        });
        pwdTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pwdTFMouseClicked(evt);
            }
        });

        pwdWarningLabel.setForeground(new java.awt.Color(214, 69, 65));
        pwdWarningLabel.setText("* Password must have 4-14 characters");

        serverIpLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        serverIpLabel.setForeground(new java.awt.Color(57, 113, 177));
        serverIpLabel.setText("Server ipv4 :");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText(".");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText(".");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText(".");

        frame_label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        frame_label.setForeground(new java.awt.Color(255, 255, 255));
        frame_label.setText("Login");

        connectingLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        connectingLabel.setForeground(new java.awt.Color(144, 153, 164));
        connectingLabel.setText("connecting ...");
        connectingLabel.setVisible(false);

        connectBtn.setBackground(new java.awt.Color(33, 35, 35));
        connectBtn.setForeground(new java.awt.Color(255, 255, 255));
        connectBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        connectBtn.setText("Connect");
        connectBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        connectBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        connectBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                connectBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                connectBtnMouseReleased(evt);
            }
        });

        cancelBtn.setBackground(new java.awt.Color(33, 35, 35));
        cancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelBtn.setText("Cancel");
        cancelBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancelBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cancelBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelBtnMouseReleased(evt);
            }
        });

        pwdLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pwdLabel.setForeground(new java.awt.Color(51, 52, 54));
        pwdLabel.setText("Password :");

        userNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userNameLabel.setForeground(new java.awt.Color(51, 52, 54));
        userNameLabel.setText("Username :");

        username_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App_Frames/icons/username_icon.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App_Frames/icons/pwd_field_icon.png"))); // NOI18N

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App_Frames/icons/icons8-delete-30.png"))); // NOI18N
        closeButton.setContentAreaFilled(false);
        closeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeButton.setIconTextGap(0);
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        minimizeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App_Frames/icons/icons8-minimize-window-30.png"))); // NOI18N
        minimizeButton.setContentAreaFilled(false);
        minimizeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeButton.setIconTextGap(0);
        minimizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rootPanelLayout = new javax.swing.GroupLayout(rootPanel);
        rootPanel.setLayout(rootPanelLayout);
        rootPanelLayout.setHorizontalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(username_icon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pwdLabel)
                            .addComponent(pwdWarningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serverIpLabel)
                            .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(userNameTF, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(usernameWarningLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(rootPanelLayout.createSequentialGroup()
                                    .addComponent(ipByte1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ipByte2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ipByte3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ipByte4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(rootPanelLayout.createSequentialGroup()
                                    .addComponent(connectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(pwdTF, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(userNameLabel)))
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addComponent(frame_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(minimizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addComponent(connectingLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        rootPanelLayout.setVerticalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minimizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(frame_label)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addComponent(userNameLabel)
                        .addGap(18, 18, 18)
                        .addComponent(userNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(username_icon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameWarningLabel)
                .addGap(53, 53, 53)
                .addComponent(pwdLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addComponent(pwdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pwdWarningLabel)
                .addGap(18, 18, 18)
                .addComponent(serverIpLabel)
                .addGap(18, 18, 18)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipByte1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(ipByte2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ipByte3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ipByte4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGap(64, 64, 64)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(connectingLabel))
        );

        userNameTF.setColumns(23);
        pwdTF.setColumns(28);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void initValues()
        {
            userNameTF.setText("");
            pwdTF.setText("");
            ipByte1.setValue(127);
            ipByte2.setValue(0);
            ipByte3.setValue(0);
            ipByte4.setValue(1);    
        }
    
    private String getIpv4(int ip[])
    {
       
        String ipAdr = String.valueOf(ip[0])+"."+String.valueOf(ip[1])+"."+String.valueOf(ip[2])+"."+String.valueOf(ip[3]);
        return ipAdr;
    }
    
    private void pwdTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pwdTFMouseClicked
        // TODO add your handling code here:
        pwdTF.setText("");
        pwdWarningLabel.setVisible(false);
    }//GEN-LAST:event_pwdTFMouseClicked

    private void userNameTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userNameTFFocusLost
        // TODO add your handling code here:
        userNameLabel.setForeground(new java.awt.Color(51, 52, 54));
    }//GEN-LAST:event_userNameTFFocusLost

    private void userNameTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userNameTFFocusGained
        // TODO add your handling code here:
        usernameWarningLabel.setVisible(false);
        userNameLabel.setForeground(new java.awt.Color(57,113,177));
    }//GEN-LAST:event_userNameTFFocusGained

    private void pwdTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pwdTFFocusGained
        // TODO add your handling code here:
        pwdWarningLabel.setVisible(false);
        pwdLabel.setForeground(new java.awt.Color(57,113,177));
    }//GEN-LAST:event_pwdTFFocusGained

    private void pwdTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pwdTFFocusLost
        // TODO add your handling code here:
          pwdLabel.setForeground(new java.awt.Color(51, 52, 54));
    }//GEN-LAST:event_pwdTFFocusLost

    private void connectBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connectBtnMousePressed
        // TODO add your handling code here:
        connectBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
           if(!isConnecting)
        {
            try
            {

                String username = isValidUsername(userNameTF.getText().trim());
                String pwd = isValidPwd(String.valueOf(pwdTF.getPassword()));
                //Creating user
                User user = new User(username, pwd);
                String server_ip = getIpv4(new int[]{(Integer)ipByte1.getValue(),(Integer)ipByte2.getValue(),(Integer)ipByte3.getValue(),(Integer)ipByte4.getValue()});

               
                connectingLabel.setText("connecting to "+server_ip+"...");
                connectingLabel.setVisible(true);
                
                new Thread(new Runnable() {

                    @Override
                    public void run() {
                        isConnecting=true;
                        try {
                           
                           
                            //establishing the connection
                            socket = new Socket(server_ip,PORT);
                            //opening out/in streams with the server 
                            ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());
                            ObjectInputStream in = new ObjectInputStream(socket.getInputStream());
                            //sending the user to server
                            out.writeObject("+login");//undecating to server that it's a login request
                            out.writeObject(user);//providing the user to the server
                            //receving the response
                            String response = (String)in.readObject();
                            if(response.equals("ok-"))
                            {
                                dispose();
                                Connected_Frame connectedFrame = new Connected_Frame(username,pwd,server_ip);
                            }else if(response.equals("err-"))
                            {
                                new Message_Dialog("An unknown error has occuried during the login process , please check the servers log files");
                            }
                              else if(response.equals("IO_err-"))
                            {
                                  new Message_Dialog("Server ERROR : Something went wrong with the streams , please make sure that you are connected to the server , that the server is online and try again .");
                            }
                            else if(response.equals("CNF_err-"))
                            {
                                new Message_Dialog("Server ERROR : server dependencies are missing , please make sure that the servers files are safe and run the application in JRE 8u241 .");
                            }
                             else if(response.equals("SQL_err-"))
                            {
                                new Message_Dialog("DATABASE ERROR : Database server is unable to log you in, please make sure that you provide correct user infromations.");
                            }
                            else
                            {
                                 new Message_Dialog("Commenication link failure : Recivied DATA is corrupted , please try again ");
                            }
                        }catch(IOException ex)
                        {
                            new Message_Dialog("Server ERROR : Something went wrong with the streams , please make sure that you are connected to the server , that the server is online and try again .");
                        } catch (ClassNotFoundException ex) {
                           new Message_Dialog("Something went wrong please contact the developers");
                        }
                        finally
                        {
                            isConnecting = false;
                            connectingLabel.setVisible(false);
                        }

                    }
                }).start();

            }catch(InvalidUsernameException e)
            {
                usernameWarningLabel.setVisible(true);
            }catch(InvalidPwdException e1)
            {
                pwdWarningLabel.setVisible(true);
            }
        }else
        {
            //JOptionPane.showMessageDialog(null, "A connection is already establishing ...");
             new Message_Dialog("A connection is already establishing ...");
        }
    }//GEN-LAST:event_connectBtnMousePressed

    private void connectBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connectBtnMouseReleased
        // TODO add your handling code here:
        connectBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    }//GEN-LAST:event_connectBtnMouseReleased

    private void cancelBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMousePressed
        // TODO add your handling code here:
         cancelBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            initVisibility();
          initValues();
         
    }//GEN-LAST:event_cancelBtnMousePressed

    private void cancelBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseReleased
        // TODO add your handling code here:
           cancelBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    }//GEN-LAST:event_cancelBtnMouseReleased

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void minimizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizeButtonActionPerformed
        // TODO add your handling code here:
        setState(JFrame.ICONIFIED) ; 
    }//GEN-LAST:event_minimizeButtonActionPerformed

    private void rootPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rootPanelMousePressed
        // TODO add your handling code here:
         mouseClickPoint = evt.getPoint(); // update the position
    }//GEN-LAST:event_rootPanelMousePressed

    private void rootPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rootPanelMouseDragged
        // TODO add your handling code here:
         Point newPoint = evt.getLocationOnScreen();
                newPoint.translate(-mouseClickPoint.x, -mouseClickPoint.y); // Moves the point by given values from its location
                setLocation(newPoint); // set the new location
    }//GEN-LAST:event_rootPanelMouseDragged

    private String isValidPwd(String pwd) throws InvalidPwdException
    {
        if(pwd.length()<4 || pwd.length()>14)throw new InvalidPwdException();
        
        return pwd;
    }
    
    private String isValidUsername(String username)throws InvalidUsernameException
    {
        if(username.isEmpty())throw new InvalidUsernameException();
        return username;
    }
    
     private void initVisibility() {
       usernameWarningLabel.setVisible(false);
       pwdWarningLabel.setVisible(false);
      
               }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame("","127.0.0.1").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cancelBtn;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel connectBtn;
    private javax.swing.JLabel connectingLabel;
    private javax.swing.JLabel frame_label;
    private javax.swing.JSpinner ipByte1;
    private javax.swing.JSpinner ipByte2;
    private javax.swing.JSpinner ipByte3;
    private javax.swing.JSpinner ipByte4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton minimizeButton;
    private javax.swing.JLabel pwdLabel;
    private javax.swing.JPasswordField pwdTF;
    private javax.swing.JLabel pwdWarningLabel;
    private javax.swing.JPanel rootPanel;
    private javax.swing.JLabel serverIpLabel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameTF;
    private javax.swing.JLabel usernameWarningLabel;
    private javax.swing.JLabel username_icon;
    // End of variables declaration//GEN-END:variables
    private static boolean isConnecting =false;
    private Point mouseClickPoint ;
    private Socket socket;
    private static final int PORT = 1234;
}
